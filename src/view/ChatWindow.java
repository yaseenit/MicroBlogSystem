/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import controller.MessageListner;
 
import controller.TopicPublisher;
import controller.TopicSubscriber;
 
import java.awt.event.KeyEvent;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintStream;
import java.util.ArrayList;
import java.util.List;

import java.util.logging.Level;
import java.util.logging.Logger;

import javax.jms.JMSException;

import javax.naming.NamingException;
import javax.swing.DefaultListModel;
import javax.swing.JTextArea;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author tk1
 */
public class ChatWindow extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    private String selectedTopic = "topics";
    private final DefaultListModel model;
    private final String userNickName;

    private Thread subsThread;
    private Thread pubThread;
    private TopicPublisher topicPublisher;
    private TopicSubscriber topicSubscriber;
    private String message;
    private List<String> topics;
  // wreter print stream
    private PrintStream printStream;
    //stream buffer readder
    public BufferedReader reader;
    public MessageListner listener ;
    
    /**
     * Creates new form ChatWindow
     */
    public ChatWindow() throws JMSException, InterruptedException, NamingException {
        this.model = new DefaultListModel<String>();

        this.model.addElement("GENERAL");
        this.initComponents();

        this.topicList.setModel(model);

        userNickName = null;

    }

    public ChatWindow(String userNickName) throws JMSException, InterruptedException, NamingException {
       
        this.userNickName = userNickName;
        this. topics = new ArrayList<>();
        this.model = new DefaultListModel<String>();
        this.model.addElement("GENERAL");
        this.topics.add("GENERAL");
        
        this.initComponents();
       this.topicList.addListSelectionListener(new ListSelectionListener() {

          
            @Override
            public void valueChanged(ListSelectionEvent e) {
                if(!e.getValueIsAdjusting()){
                    selectedTopic = topicList.getSelectedValue().toString();
                }
             }
        });
        listener = new MessageListner(this.model);
           //configure reader to ready from the application output to the system
        this.reader = new BufferedReader(new InputStreamReader(System.in));
        //configure the printer to print the input red from the buffer  in jtextArea
       this.printStream = new PrintStream(new CustomOutputStream(chatDisplay));
       //set the  print stream object configuration
       System.setOut(printStream);
       //set the buffer reader object configurea
       System.setErr(printStream);
        this.topicList.setSelectedValue("GENERAL", true);
        this.setTitle("::Welcome:: " + this.userNickName);
        this.topicList.setModel(model);
        this.topicPublisher = new TopicPublisher();
        this.topicSubscriber = new TopicSubscriber();
        this.topicSubscriber.subscribe(listener);
 
        this.subsThread = new Thread(this.topicSubscriber);
        this.subsThread.setDaemon(false);
        this.subsThread.start();

        this.pubThread = new Thread(this.topicPublisher);
        this.pubThread.setDaemon(false);
        this.pubThread.start();
         
        this.topicPublisher.publish(this.userNickName + "::|> has joined the chat house :: message").run();
       
        

    }
    public boolean isUniqTopic(String newTopic){
        boolean isNewTopic = true;
        for(String topic : topics){
              if(topic == null ? newTopic == null : topic.equals(newTopic)){
                   isNewTopic = false;
              }
        }
        if(isNewTopic) {
            this.topics.add(newTopic);
        }
           
        
        
       return isNewTopic;
            
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel4 = new javax.swing.JPanel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jPanel1 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        topicList = new javax.swing.JList();
        addTopic = new javax.swing.JButton();
        topic = new javax.swing.JTextField();
        subscribe = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        mssgArea = new javax.swing.JTextArea();
        send = new javax.swing.JToggleButton();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        chatDisplay = new javax.swing.JTextArea();

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        jPasswordField1.setText("jPasswordField1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(51, 51, 51));

        jPanel1.setBackground(new java.awt.Color(51, 51, 51));

        jPanel7.setBackground(new java.awt.Color(51, 51, 51));
        jPanel7.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(153, 153, 153))); // NOI18N

        topicList.setBackground(new java.awt.Color(17, 17, 14));
        topicList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "List of Topics", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(255, 255, 255))); // NOI18N
        topicList.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        topicList.setForeground(new java.awt.Color(255, 255, 255));
        topicList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { " " };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(topicList);

        addTopic.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        addTopic.setFont(new java.awt.Font("Dialog", 1, 10)); // NOI18N
        addTopic.setForeground(new java.awt.Color(255, 255, 255));
        addTopic.setText("ADD TOPIC");
        addTopic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTopicActionPerformed(evt);
            }
        });

        topic.setText("TOPIC");
        topic.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                topicMouseClicked(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                topicMouseExited(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                topicMouseEntered(evt);
            }
        });
        topic.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topicActionPerformed(evt);
            }
        });
        topic.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                topicKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                topicKeyReleased(evt);
            }
        });

        subscribe.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        subscribe.setForeground(new java.awt.Color(255, 255, 255));
        subscribe.setText("SUBSCRIBE");
        subscribe.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subscribeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addComponent(topic, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addTopic))
                    .addComponent(subscribe, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 384, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(2, 2, 2)
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel7Layout.createSequentialGroup()
                        .addGap(2, 2, 2)
                        .addComponent(addTopic, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(topic, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 324, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(subscribe, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanel6.setBackground(new java.awt.Color(51, 51, 51));

        jScrollPane1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        mssgArea.setBackground(new java.awt.Color(0, 0, 0));
        mssgArea.setColumns(20);
        mssgArea.setForeground(new java.awt.Color(255, 255, 255));
        mssgArea.setRows(5);
        mssgArea.setText(" ");
        mssgArea.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                mssgAreaMouseClicked(evt);
            }
        });
        mssgArea.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                mssgAreaKeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(mssgArea);

        send.setBackground(javax.swing.UIManager.getDefaults().getColor("CheckBoxMenuItem.selectionBackground"));
        send.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        send.setForeground(new java.awt.Color(255, 255, 255));
        send.setText("SEND");
        send.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                sendMouseClicked(evt);
            }
        });
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(send, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        jPanel5.setBackground(new java.awt.Color(51, 51, 51));
        jPanel5.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Dialog", 1, 12), new java.awt.Color(153, 153, 153))); // NOI18N

        jScrollPane3.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "::Messages::", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Andale Mono", 1, 14), java.awt.Color.white)); // NOI18N
        jScrollPane3.setForeground(new java.awt.Color(255, 255, 255));

        chatDisplay.setBackground(new java.awt.Color(17, 17, 14));
        chatDisplay.setColumns(20);
        chatDisplay.setFont(new java.awt.Font("Droid Sans Mono", 0, 14)); // NOI18N
        chatDisplay.setForeground(new java.awt.Color(255, 255, 255));
        chatDisplay.setRows(5);
        jScrollPane3.setViewportView(chatDisplay);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addGap(0, 0, 0))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel7, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(4, 4, 4)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        setSize(new java.awt.Dimension(884, 552));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        try {
            if(selectedTopic == "GENERAL"){
             this.topicPublisher.publish(this.userNickName + ":: Topic "+selectedTopic+"|>"+mssgArea.getText()+":: message").run();
            }else
            new TopicPublisher(selectedTopic).publish(this.userNickName + ":: Topic "+selectedTopic+"|>"+mssgArea.getText()+":: message").run();
        } catch (NamingException | JMSException | InterruptedException ex) {
            Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sendActionPerformed

    private void mssgAreaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_mssgAreaMouseClicked

            // TODO add your handling code here:

    }//GEN-LAST:event_mssgAreaMouseClicked

    private void mssgAreaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_mssgAreaKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {

        } else {

        }
            // TODO add your handling code here:


    }//GEN-LAST:event_mssgAreaKeyPressed

    private void sendMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_sendMouseClicked

            // TODO add your handling code here:

    }//GEN-LAST:event_sendMouseClicked

    private void topicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topicActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_topicActionPerformed

    private void subscribeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subscribeActionPerformed
        try {
            if(selectedTopic != "GENERAL")
         new TopicSubscriber(selectedTopic).subscribe(listener).run();
         } catch (NamingException | JMSException ex) {
            Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_subscribeActionPerformed

    private void topicMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topicMouseClicked
//    TOPIC
        if ("TOPIC".equalsIgnoreCase(this.topic.getText().trim())) {
            this.topic.setText("");
        }

    }//GEN-LAST:event_topicMouseClicked

    private void topicMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topicMouseEntered
        if ("TOPIC".equalsIgnoreCase(this.topic.getText().trim())) {
            this.topic.setText("");
        }
    }//GEN-LAST:event_topicMouseEntered

    private void topicMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_topicMouseExited
        if ("".equalsIgnoreCase(this.topic.getText().trim())) {
            this.topic.setText("TOPIC");
        }
    }//GEN-LAST:event_topicMouseExited

    private void topicKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_topicKeyPressed
        if ("TOPIC".equalsIgnoreCase(this.topic.getText().trim())) {
            this.topic.setText("");
        }
    }//GEN-LAST:event_topicKeyPressed

    private void topicKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_topicKeyReleased
        if ("TOPIC".equalsIgnoreCase(this.topic.getText().trim())) {
            this.topic.setText("");
        }
    }//GEN-LAST:event_topicKeyReleased

    private void addTopicActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTopicActionPerformed
        // TODO add your handling code here:.subscribe(new MessageListner());
       if(this.isUniqTopic (topic.getText().toString())){
           
 
        try {
            System.out.println(topic);
//             new TopicSubscriber(topic.getText().toString()).subscribe(listener);
             this.topicPublisher.publish(topic.getText().toString()+" ::topic").run();
//                      this.topicPublisher.publish(this.userNickName + "::|> has joined the chat house ::message");

        } catch (JMSException ex) {
            Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
        }
           }
    }//GEN-LAST:event_addTopicActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ChatWindow.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                       new ChatWindow("aDAM").setVisible(true);

                } catch (JMSException ex) {
                    Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
                } catch (InterruptedException ex) {
                    Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
                } catch (NamingException ex) {
                    Logger.getLogger(ChatWindow.class.getName()).log(Level.SEVERE, null, ex);
                }
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTopic;
    private javax.swing.JTextArea chatDisplay;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea mssgArea;
    private javax.swing.JToggleButton send;
    private javax.swing.JButton subscribe;
    private javax.swing.JTextField topic;
    private javax.swing.JList topicList;
    // End of variables declaration//GEN-END:variables

/**
*   Output stream writer class  to write out all system in to JTextArea
*/
class CustomOutputStream extends OutputStream{
    
    private JTextArea textArea;
    
    public CustomOutputStream(JTextArea textArea){
        this.textArea = textArea;
    }

    @Override
    public void write(int i) throws IOException {
        textArea.append(String.valueOf((char) i));
        textArea.setCaretPosition(mssgArea.getDocument().getLength());
     }
    
}
}
